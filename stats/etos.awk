# Το παρόν awk script χρησιμοποιείται στη μείξη δύο αρχείων δεδομένων παρτίδας.
# Το ένα αρχείο θεωρείται παλαιό και το όνομά του καθορίζεται στο command line
# μέσω της μεταβλητής "old", ενώ τα νέα δεδομένα διαβάζονται ως input από τον
# awk. Ας δούμε μερικά παραδείγματα:
#
#	awk -f etos.awk -v old="panos1" panos2
#
# Τα παλαιά στοιχεία βρίσκονται στο file "panos1", ενώ τα νέα θα διαβαστούν από
# το file "panos2".
#
#	awk -f etos.awk -v old="panos1" panos2 panos3
#
# Τα παλαιά στοιχεία βρίσκονται στο file "panos1", ενώ τα νέα θα διαβαστούν από
# τα files "panos2" και "panos3".
#
#	stats -D panos2 | awk -f etos.awk -v old="panos1"
#
# Τα παλαιά στοιχεία βρίσκονται στο file "panos1", ενώ τα νέα θα διαβαστούν από
# το standard input το οποίο θα παρέχεται από το πρόγραμμα stats.
#
# Τα στοιχεία παρτίδας είναι ταξινομημένα με αντίστροφη σειρά, από τα νεότερα
# τραπέζι προς τα παλαιότερα. Αυτό ισχύει τόσο για τα παλαιά και νέα δεδομένα,
# όσο και για τα δεδομένα που θα παραχθούν ως αποτέλεσμα μείξης των δεδομένων
# αυτών.
#
# Γενικά επιτρέπονται κενές γραμμές στα προς συνένωση δεδομένα (παλαιά και νέα),
# αλλά στο output οι γραμμές αυτές απαλείφονται.

BEGIN {
	FS = "\t"
	OFS = "\t"

	# Διαβάζω την πρώτη γραμμή από το υπάρχον (παλαιό) αρχείο
	# ώστε να έχω ένα πρώτο σημείο αναφοράς.

	oldTrapezi = 0

	while ((getline <old) == 1) {
		if (NF < 1)
		continue

		oldTrapezi = $1 + 0
		oldRow = $0

		break
	}
}

NF < 1 {
	next
}

# Αν δεν υπάρχουν πια άλλα δεδομένα στο παλαιό αρχείο, τότε απλώς τυπώνουμε
# τις γραμμές που διαβάζουμε από το input, ήτοι τις γραμμές που αφορούν σε
# νέα τραπέζια.

!oldTrapezi {
	print $0
	next
}

# Έχουμε κρατημένη γραμμή δεδομένων από το παλαιό αρχείο στο "oldRow" και
# τον σχετικό κωδικό τραπεζιού στο "oldTrapezi". Δεδομένου ότι τα τραπέζια
# πρέπει να είναι ταξινομημένα με φθίνουσα σειρά προχωρούμε στους σχετικούς
# ελέγχους.

{
	$1 += 0

	# Όσο το τραπέζι που διαβάζω από το νέο αρχείο είναι νεότερο σε
	# σχέση με το κρατημένο που έχω από το παλαιό αρχείο, τυπώνω τα
	# (νέα) δεδομένα και προχωρώ στην επόμενη γραμμή.

	if ($1 > oldTrapezi) {
		print $0
		next
	}

	# Μόλις διάβασα γραμμή από το νέο αρχείο που αφορά παλαιότερο τραπέζι
	# σε σχέση με αυτό που έχω κρατημένο από το παλαιό αρχείο. Επομένως
	# εκτυπώνω τη γραμμή που είχα κρατήσει από το παλαιό αρχείο…

	print oldRow

	# …και συνεχίζω να τυπώνω γραμμές από το παλαιό αρχείο μέχρι να βρω
	# παλαιότερο τραπέζι από αυτό που μόλις διάβασα από τα νέα δεδομένα.

	sarosi_old($0, $1)
}

END {
	if (!oldTrapezi)
	exit(0)

	print oldRow

	while ((getline <old) == 1) {
		if (NF > 0)
		print $0
	}
}

function sarosi_old(newRow, newTrapezi) {
	while ((getline <old) == 1) {
		if (NF < 1)
		continue

		$1 += 0

		# Όσο διαβάζω γραμμές από το παλαιό αρχείο που αφορούν σε
		# νεότερα τραπέζια σε σχέση με αυτό που έχω κρατημένο από
		# το νέο αρχείο, τυπώνω αυτές τις γραμμές.

		if ($1 > newTrapezi) {
			print $0
			continue
		}

		# Μόλις διάβασα από το παλαιό αρχείο δεδομένα που αφορούν σε
		# παλαιότερο τραπέζι σε σχέση με αυτό που έχω κρατημένο από
		# το νέο αρχείο. Επομένως τυπώνω τα κρατημένα δεδομένα…

		print newRow

		# …και κρατώ τα στοιχεία που μόλις διάβασα, όπως είχα κάνει
		# και στην αρχή της όλης διαδικασίας.

		oldRow = $0
		oldTrapezi = $1

		return
	}

	# Τα δεδομένα από το παλαιό αρχείο έχουν εξαντληθεί, επομένως εκτυπώνω
	# τη γραμμή που έχω κρατημένη από το νέο αρχείο…

	print newRow

	# …και μηδενίζω τον κωδικό τραπεζιού από το παλαιό αρχείο, πράγμα που
	# δείχνει ακριβώς ότι τα παλαιά στοιχεία έχουν εξαντληθεί.

	oldTrapezi = 0
}
